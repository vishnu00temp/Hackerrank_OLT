int flippingMatrix(vector<vector<int>> matrix) {
      int n=matrix.size()/2;
    int totalSum=0;

    // For each cell in the upper-left quadrant, pick the maximum of
    // the 4 symmetric positions it can flip to, to maximize sum.
    for(int i=0;i<n;i++){
        for (int j=0;j<n;j++) {
            int val1=matrix[i][j];
            int val2=matrix[i][2*n-j-1];
            int val3=matrix[2*n-i-1][j];
            int val4 = matrix[2*n-i-1][2*n-j-1];
            totalSum+=max({val1,val2,val3,val4});
        }
    }
    return totalSum;
}
